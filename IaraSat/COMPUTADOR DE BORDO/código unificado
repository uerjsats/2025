// ========== Bibliotecas ==========
#include <Wire.h>
#include <Arduino.h>

#include <Adafruit_BMP280.h>
#include <DHT.h>

#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>

#include <HardwareSerial.h>
#include <TinyGPS++.h>

// ========== Definições de Pinos ==========
#define SDA 42
#define SCL 41

#define DHT_PIN 48
#define DHT_TYPE DHT22

#define GPS_RX 16
#define GPS_TX 17

#define PRESSAO_NIVEL_MAR 1013.25

// ========== Objetos dos Sensores ==========
Adafruit_BMP280 bmp;
DHT dht(DHT_PIN, DHT_TYPE);
Adafruit_MPU6050 mpu;
TinyGPSPlus gps;
HardwareSerial gpsSerial(1);

// ========== Setup ==========
void setup() {
  Serial.begin(115200);
  gpsSerial.begin(9600, SERIAL_8N1, GPS_RX, GPS_TX);
  Wire.begin(SDA, SCL);

  // --- BMP280 ---
  if (!bmp.begin(0x76)) {
    Serial.println("Falha ao inicializar o sensor BMP280!");
    while (1);
  } else {
    Serial.println("Sensor BMP280 inicializado com sucesso.");
  }

  bmp.setSampling(Adafruit_BMP280::MODE_NORMAL,
                  Adafruit_BMP280::SAMPLING_X2,
                  Adafruit_BMP280::SAMPLING_X16,
                  Adafruit_BMP280::FILTER_X16,
                  Adafruit_BMP280::STANDBY_MS_500);

  // --- DHT22 ---
  dht.begin();

  // --- MPU6050 ---
  if (!mpu.begin(0x68)) {
    Serial.println("Falha ao inicializar o sensor MPU6050!");
  } else {
    Serial.println("Sensor MPU6050 inicializado com sucesso!");
  }

  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_5_HZ);

  Serial.println("Setup concluído.\n");
}

// ========== Loop ==========
void loop() {
  delay(2000);

  // --- Leitura BMP280 ---
  float temp_bmp = bmp.readTemperature();
  float pressao_bmp = bmp.readPressure() / 100.0F; // hPa
  float altitude_bmp = bmp.readAltitude(PRESSAO_NIVEL_MAR);

  // --- Leitura DHT22 ---
  float temp_dht_f = dht.readTemperature(true);  // Fahrenheit
  float humid_dht = dht.readHumidity();
  
  if (isnan(temp_dht_f) || isnan(humid_dht)) {
    Serial.println("Falha ao ler os dados do sensor DHT22!");
    return;
  }

  // Corrigido: calcula sensação térmica em Fahrenheit
  float sens_term_f = dht.computeHeatIndex(temp_dht_f, humid_dht, true);

  // --- Leitura MPU6050 ---
  sensors_event_t a, g, temp_mpu;
  mpu.getEvent(&a, &g, &temp_mpu);

  // --- Leitura GPS ---
  while (gpsSerial.available()) {
    gps.encode(gpsSerial.read());
  }

  // ========== Impressão dos Dados ==========

  Serial.println("========= SENSOR BMP280 =========");
  Serial.print("Temperatura: "); Serial.print(temp_bmp); Serial.println(" °C");
  Serial.print("Pressão: "); Serial.print(pressao_bmp); Serial.println(" hPa");
  Serial.print("Altitude: "); Serial.print(altitude_bmp); Serial.println(" m\n");

  Serial.println("========= SENSOR DHT22 =========");
  Serial.print("Temperatura: "); Serial.print(temp_dht_f); Serial.println(" °F");
  Serial.print("Umidade: "); Serial.print(humid_dht); Serial.println(" %");
  Serial.print("Sensação térmica: "); Serial.print(sens_term_f); Serial.println(" °F\n");

  Serial.println("========= SENSOR MPU6050 =========");
  Serial.print("Aceleração (m/s²) - X: "); Serial.print(a.acceleration.x);
  Serial.print(" | Y: "); Serial.print(a.acceleration.y);
  Serial.print(" | Z: "); Serial.println(a.acceleration.z);

  Serial.print("Giroscópio (°/s) - X: "); Serial.print(g.gyro.x * RAD_TO_DEG);
  Serial.print(" | Y: "); Serial.print(g.gyro.y * RAD_TO_DEG);
  Serial.print(" | Z: "); Serial.println(g.gyro.z * RAD_TO_DEG);

  Serial.print("Temperatura MPU: "); Serial.print(temp_mpu.temperature); Serial.println(" °C\n");

  Serial.println("========= MÓDULO GPS =========");
  if (gps.location.isValid()) {
    Serial.print("Latitude: "); Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: "); Serial.println(gps.location.lng(), 6);
    Serial.print("Altitude: "); Serial.print(gps.altitude.meters()); Serial.println(" m");
    Serial.print("Velocidade: "); Serial.print(gps.speed.kmph()); Serial.println(" km/h");
    Serial.print("Hora (UTC): ");
    Serial.print(gps.time.hour()); Serial.print(":");
    Serial.println(gps.time.minute());
  } else {
    Serial.println("Localização GPS inválida ou sem sinal.");
  }

  Serial.println("=========================================\n");
}
